---
// src/pages/profile/orders.astro
import ProtectedLayout from '../../layouts/ProtectedLayout.astro';
import OrdersList from '../../components/profile/OrdersList';
---

<ProtectedLayout title="Mis Pedidos">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 min-h-[calc(100vh-200px)]">
    <!-- Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-white">Mis Pedidos</h1>
      <p class="mt-2 text-gray-400">Revisa el historial de tus compras</p>
    </div>

    <!-- Filters Section -->
    <div class="bg-gray-800 rounded-lg p-6 mb-6">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div>
          <label class="block text-sm font-medium text-gray-400 mb-2">
            Filtrar por estado
          </label>
          <select 
            id="status-filter"
            class="w-full px-4 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
          >
            <option value="">Todos los estados</option>
            <option value="pending">Pendiente</option>
            <option value="processing">Procesando</option>
            <option value="completed">Completado</option>
            <option value="cancelled">Cancelado</option>
          </select>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-400 mb-2">
            Ordenar por fecha
          </label>
          <select 
            id="sort-order"
            class="w-full px-4 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
          >
            <option value="desc">M치s recientes primero</option>
            <option value="asc">M치s antiguos primero</option>
          </select>
        </div>

        <div class="flex items-end">
          <button
            id="refresh-orders"
            class="px-4 py-2 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 hover:text-white transition-colors duration-200"
            title="Actualizar pedidos"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
            </svg>
          </button>
        </div>
      </div>
    </div>

    <!-- Orders List Component -->
    <OrdersList client:load />
  </div>
</ProtectedLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const statusFilter = document.getElementById('status-filter');
    const sortOrder = document.getElementById('sort-order');
    const refreshButton = document.getElementById('refresh-orders');

    // Funci칩n para emitir evento de cambio
    const emitFilterChange = () => {
      const event = new CustomEvent('ordersFilterChange', {
        detail: {
          status: statusFilter ? (statusFilter as HTMLSelectElement).value : '',
          sort: sortOrder ? (sortOrder as HTMLSelectElement).value : ''
        }
      });
      document.dispatchEvent(event);
    };

    // Manejar cambios en filtros
    [statusFilter, sortOrder].forEach(element => {
      if (element) {
        element.addEventListener('change', emitFilterChange);
      }
    });

    // Manejar click en bot칩n de actualizar
    if (refreshButton) {
      refreshButton.addEventListener('click', () => {
        refreshButton.classList.add('animate-spin');
        
        const event = new CustomEvent('ordersRefresh');
        document.dispatchEvent(event);
        
        setTimeout(() => {
          refreshButton.classList.remove('animate-spin');
        }, 1000);
      });
    }
  });
</script>

<style>
  select {
    appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%239ca3af' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
  }
  
  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
</style>