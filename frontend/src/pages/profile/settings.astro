---
// src/pages/profile/settings.astro
import ProtectedLayout from '../../layouts/ProtectedLayout.astro';
import SettingsForm from '../../components/profile/SettingsForm';
---

<ProtectedLayout title="Configuración">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header con el mismo estilo que las otras páginas -->
    <div class="bg-gray-800 rounded-lg p-6 mb-6">
      <div>
        <h1 class="text-3xl font-bold text-white">Configuración</h1>
        <p class="text-gray-400 mt-1">Personaliza tu experiencia y preferencias</p>
      </div>
    </div>

    <!-- Contenedor principal con grid -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <!-- Columna principal (2/3) -->
      <div class="lg:col-span-2 space-y-6">
        <!-- Configuración de Cuenta -->
        <div class="bg-gray-800 rounded-lg p-6">
          <h2 class="text-xl font-semibold text-white mb-6">Configuración de Cuenta</h2>
          <SettingsForm client:load />
        </div>

        <!-- Configuración de Notificaciones -->
        <div class="bg-gray-800 rounded-lg p-6">
          <h2 class="text-xl font-semibold text-white mb-6">Notificaciones por Email</h2>
          <div class="space-y-4">
            <div class="flex items-center justify-between p-4 bg-gray-700/50 rounded-lg">
              <div class="flex-1">
                <h3 class="text-white font-medium">Ofertas y Promociones</h3>
                <p class="text-gray-400 text-sm mt-1">Recibe notificaciones sobre ofertas especiales</p>
              </div>
              <label class="switch">
                <input type="checkbox" id="notifications-offers" checked>
                <span class="slider round"></span>
              </label>
            </div>
            
            <div class="flex items-center justify-between p-4 bg-gray-700/50 rounded-lg">
              <div class="flex-1">
                <h3 class="text-white font-medium">Nuevos Productos</h3>
                <p class="text-gray-400 text-sm mt-1">Notificaciones sobre nuevos juegos añadidos</p>
              </div>
              <label class="switch">
                <input type="checkbox" id="notifications-products">
                <span class="slider round"></span>
              </label>
            </div>
            
            <div class="flex items-center justify-between p-4 bg-gray-700/50 rounded-lg">
              <div class="flex-1">
                <h3 class="text-white font-medium">Estado de Pedidos</h3>
                <p class="text-gray-400 text-sm mt-1">Actualizaciones sobre el estado de tus pedidos</p>
              </div>
              <label class="switch">
                <input type="checkbox" id="notifications-orders" checked>
                <span class="slider round"></span>
              </label>
            </div>
            
            <div class="flex items-center justify-between p-4 bg-gray-700/50 rounded-lg">
              <div class="flex-1">
                <h3 class="text-white font-medium">Newsletter</h3>
                <p class="text-gray-400 text-sm mt-1">Recibe nuestro boletín semanal</p>
              </div>
              <label class="switch">
                <input type="checkbox" id="notifications-newsletter">
                <span class="slider round"></span>
              </label>
            </div>
          </div>
        </div>

        <!-- Configuración de Privacidad -->
        <div class="bg-gray-800 rounded-lg p-6">
          <h2 class="text-xl font-semibold text-white mb-6">Privacidad</h2>
          <div class="space-y-4">
            <div class="flex items-center justify-between p-4 bg-gray-700/50 rounded-lg">
              <div class="flex-1">
                <h3 class="text-white font-medium">Perfil Público</h3>
                <p class="text-gray-400 text-sm mt-1">Permitir que otros usuarios vean tu perfil</p>
              </div>
              <label class="switch">
                <input type="checkbox" id="privacy-public-profile">
                <span class="slider round"></span>
              </label>
            </div>
            
            <div class="flex items-center justify-between p-4 bg-gray-700/50 rounded-lg">
              <div class="flex-1">
                <h3 class="text-white font-medium">Mostrar Lista de Deseos</h3>
                <p class="text-gray-400 text-sm mt-1">Permitir que otros vean tu lista de deseos</p>
              </div>
              <label class="switch">
                <input type="checkbox" id="privacy-wishlist">
                <span class="slider round"></span>
              </label>
            </div>
            
            <div class="flex items-center justify-between p-4 bg-gray-700/50 rounded-lg">
              <div class="flex-1">
                <h3 class="text-white font-medium">Historial de Compras</h3>
                <p class="text-gray-400 text-sm mt-1">Mostrar tus compras recientes en tu perfil</p>
              </div>
              <label class="switch">
                <input type="checkbox" id="privacy-purchase-history">
                <span class="slider round"></span>
              </label>
            </div>
          </div>
        </div>
      </div>

      <!-- Columna lateral (1/3) -->
      <div class="space-y-6">
        <!-- Seguridad -->
        <div class="bg-gray-800 rounded-lg p-6">
          <h3 class="text-lg font-semibold text-white mb-4">Seguridad</h3>
          <div class="space-y-3">
            <div class="p-4 bg-gray-700/50 rounded-lg">
              <h4 class="text-white font-medium text-sm">Última sesión</h4>
              <p class="text-gray-400 text-xs mt-1">Hace 2 horas</p>
              <p class="text-gray-500 text-xs">Jerez de la Frontera, España</p>
            </div>
            
            <button class="w-full bg-gray-700 hover:bg-gray-600 text-white px-4 py-3 rounded-lg transition-colors flex items-center justify-center">
              <i class="fas fa-key mr-2"></i>
              Cambiar Contraseña
            </button>
            
            <button class="w-full bg-gray-700 hover:bg-gray-600 text-white px-4 py-3 rounded-lg transition-colors flex items-center justify-center">
              <i class="fas fa-shield-alt mr-2"></i>
              Activar 2FA
            </button>
          </div>
        </div>

        <!-- Zona de Peligro -->
        <div class="bg-gray-800 border-2 border-red-600/50 rounded-lg p-6">
          <h3 class="text-lg font-semibold text-red-400 mb-4 flex items-center">
            <i class="fas fa-exclamation-triangle mr-2"></i>
            Zona de Peligro
          </h3>
          <div class="space-y-3">
            <div>
              <p class="text-white font-medium text-sm mb-2">Exportar Datos</p>
              <p class="text-gray-400 text-xs mb-3">Descarga todos tus datos personales</p>
              <button 
                id="export-data-btn"
                class="w-full bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition-colors duration-200 text-sm"
              >
                <i class="fas fa-download mr-2"></i>
                Exportar
              </button>
            </div>
            
            <hr class="border-gray-700">
            
            <div>
              <p class="text-white font-medium text-sm mb-2">Eliminar Cuenta</p>
              <p class="text-gray-400 text-xs mb-3">Eliminar permanentemente tu cuenta y todos los datos</p>
              <button 
                id="delete-account-btn"
                class="w-full bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg transition-colors duration-200 text-sm"
              >
                <i class="fas fa-trash-alt mr-2"></i>
                Eliminar Cuenta
              </button>
            </div>
          </div>
        </div>

        <!-- Información adicional -->
        <div class="bg-gray-800 rounded-lg p-6">
          <h3 class="text-lg font-semibold text-white mb-4">Ayuda</h3>
          <div class="space-y-3">
            <a href="/politica-privacidad" class="flex items-center justify-between p-3 bg-gray-700/50 hover:bg-gray-700 rounded-lg transition-colors text-sm">
              <span class="text-gray-300">Política de Privacidad</span>
              <i class="fas fa-chevron-right text-gray-400"></i>
            </a>
            <a href="/terminos" class="flex items-center justify-between p-3 bg-gray-700/50 hover:bg-gray-700 rounded-lg transition-colors text-sm">
              <span class="text-gray-300">Términos de Servicio</span>
              <i class="fas fa-chevron-right text-gray-400"></i>
            </a>
            <a href="/contacto" class="flex items-center justify-between p-3 bg-gray-700/50 hover:bg-gray-700 rounded-lg transition-colors text-sm">
              <span class="text-gray-300">Contactar Soporte</span>
              <i class="fas fa-chevron-right text-gray-400"></i>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</ProtectedLayout>

<script>
  import { showToast } from '../../utils/toast';

  document.addEventListener('DOMContentLoaded', () => {
    // Cargar configuraciones guardadas
    loadSettings();
    
    // Manejar cambios en switches
    const switches = document.querySelectorAll('input[type="checkbox"]');
    switches.forEach(switchElement => {
      switchElement.addEventListener('change', saveSettings);
    });
    
    // Exportar datos
    const exportBtn = document.getElementById('export-data-btn');
    if (exportBtn) {
      exportBtn.addEventListener('click', exportData);
    }
    
    // Eliminar cuenta
    const deleteBtn = document.getElementById('delete-account-btn');
    if (deleteBtn) {
      deleteBtn.addEventListener('click', deleteAccount);
    }
  });

  async function loadSettings() {
    try {
      const token = localStorage.getItem('auth_token');
      if (!token) return;

      const response = await fetch('http://localhost:8000/api/user/settings', {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Accept': 'application/json'
        }
      });
      
      if (response.ok) {
        const settings = await response.json();
        
        // Aplicar configuraciones
        Object.keys(settings).forEach(key => {
          const element = document.getElementById(key);
          if (element && element instanceof HTMLInputElement) {
            element.checked = settings[key];
          }
        });
      }
    } catch (error) {
      console.error('Error loading settings:', error);
    }
  }

  async function saveSettings() {
    const settings = {};
    const switches = document.querySelectorAll('input[type="checkbox"]');
    
    switches.forEach(switchElement => {
      const input = switchElement as HTMLInputElement;
      settings[input.id] = input.checked;
    });
    
    try {
      const token = localStorage.getItem('auth_token');
      if (!token) return;

      await fetch('http://localhost:8000/api/user/settings', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`,
          'Accept': 'application/json'
        },
        body: JSON.stringify(settings)
      });

      // Mostrar toast de éxito
      document.dispatchEvent(new CustomEvent('show-toast', {
        detail: {
          message: 'Configuración guardada',
          type: 'success',
          duration: 2000
        }
      }));
    } catch (error) {
      console.error('Error saving settings:', error);
      document.dispatchEvent(new CustomEvent('show-toast', {
        detail: {
          message: 'Error al guardar configuración',
          type: 'error',
          duration: 3000
        }
      }));
    }
  }

  async function exportData() {
    try {
      const token = localStorage.getItem('auth_token');
      if (!token) return;

      const response = await fetch('http://localhost:8000/api/user/export', {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Accept': 'application/json'
        }
      });
      
      if (response.ok) {
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'mis-datos-retro-games.json';
        a.click();
        window.URL.revokeObjectURL(url);
        
        document.dispatchEvent(new CustomEvent('show-toast', {
          detail: {
            message: 'Datos exportados correctamente',
            type: 'success',
            duration: 3000
          }
        }));
      }
    } catch (error) {
      console.error('Error exporting data:', error);
      document.dispatchEvent(new CustomEvent('show-toast', {
        detail: {
          message: 'Error al exportar datos',
          type: 'error',
          duration: 3000
        }
      }));
    }
  }

  async function deleteAccount() {
    // Usar el sistema de modal en lugar de confirm
    document.dispatchEvent(new CustomEvent('show-modal', {
      detail: {
        title: 'Eliminar Cuenta',
        message: '¿Estás seguro de que quieres eliminar tu cuenta? Esta acción es irreversible y eliminará todos tus datos, pedidos e historial.',
        confirmText: 'Eliminar Permanentemente',
        cancelText: 'Cancelar',
        type: 'danger',
        onConfirm: async () => {
          try {
            const token = localStorage.getItem('auth_token');
            if (!token) return;

            const response = await fetch('http://localhost:8000/api/user/delete', {
              method: 'DELETE',
              headers: {
                'Authorization': `Bearer ${token}`,
                'Accept': 'application/json'
              }
            });
            
            if (response.ok) {
              localStorage.clear();
              window.location.href = '/';
            } else {
              document.dispatchEvent(new CustomEvent('show-toast', {
                detail: {
                  message: 'Error al eliminar la cuenta. Contacta con soporte.',
                  type: 'error',
                  duration: 5000
                }
              }));
            }
          } catch (error) {
            console.error('Error deleting account:', error);
            document.dispatchEvent(new CustomEvent('show-toast', {
              detail: {
                message: 'Error al eliminar la cuenta. Contacta con soporte.',
                type: 'error',
                duration: 5000
              }
            }));
          }
        }
      }
    }));
  }
</script>

<style>
  /* Switch toggle styles - Los mantengo exactamente igual */
  .switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
  }

  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #4a5568;
    transition: .4s;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
  }

  input:checked + .slider {
    background-color: #ef4444; /* Cambié a rojo para mantener consistencia con el tema */
  }

  input:focus + .slider {
    box-shadow: 0 0 1px #ef4444;
  }

  input:checked + .slider:before {
    transform: translateX(26px);
  }

  .slider.round {
    border-radius: 34px;
  }

  .slider.round:before {
    border-radius: 50%;
  }
</style>