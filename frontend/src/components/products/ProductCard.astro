---
// ProductCard.astro
// Recibe las propiedades necesarias para mostrar un producto
interface Props {
  id: number;
  title: string;
  console: string;
  imageUrl: string;
  price: number;
}

const { id, title, console, imageUrl, price } = Astro.props;

// Formato de precio
const formattedPrice = new Intl.NumberFormat('es-ES', {
  style: 'currency',
  currency: 'EUR'
}).format(price);
---

<div class="bg-gray-800 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
  <a href={`/games/nintendo/mario64/`} class="block">
    <div class="relative pb-[100%] bg-gray-900">
      <img 
        src={imageUrl} 
        alt={title} 
        class="absolute inset-0 w-full h-full object-contain p-4"
      />
    </div>
    
    <div class="p-4 text-center">
      <h3 class="text-white font-bold text-lg mb-1">{title}</h3>
      <p class="text-gray-400 text-sm mb-3">{console}</p>
      <div class="flex justify-between items-center">
        <span class="text-white font-bold text-xl">{formattedPrice}</span>
        <button 
          class="bg-red-600 hover:bg-red-700 text-white font-bold py-1 px-3 rounded-lg transition duration-300 text-sm"
          onclick="addToCart(event, {id})"
        >
          <i class="fas fa-shopping-cart mr-1"></i> Añadir
        </button>
      </div>
    </div>
  </a>
</div>

<script>
  // Función simple que será reemplazada por lógica de React
  function addToCart(event, id) {
    event.preventDefault();
    console.log(`Producto ${id} añadido al carrito`);
    // Aquí posteriormente se conectará con el store de React
  }
</script>